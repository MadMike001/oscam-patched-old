name: Build OSCam for Dreambox ARM (ICAM+EMU+Hexdump)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Repo klonen (oscam-patched-old)
        uses: actions/checkout@v3
        with:
          repository: oscam-emu/oscam-patched-old
          path: oscam

      - name: 🐳 Docker vorbereiten (ARM Crossbuild)
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: 🏗️ Kompilieren in ARM Umgebung (OE2.5)
        run: |
          docker run --rm -v ${{ github.workspace }}/oscam:/build \
            -w /build \
            multiarch/ubuntu-core:armhf-bionic bash -c "\
              apt-get update && \
              apt-get install -y build-essential libusb-1.0-0-dev libpcsclite-dev \
                                 libssl-dev cmake pkg-config git xz-utils && \
              make distclean || true && \
              touch config.sh && \
              echo 'CONFIG_USE_LIBUSB=1' >> config.sh && \
              echo 'CONFIG_USE_SSL=1' >> config.sh && \
              echo 'CONFIG_LIB_CRYPTO=internal' >> config.sh && \
              echo 'CONFIG_LIB_UCODES=internal' >> config.sh && \
              echo 'CONFIG_ENABLE_EMU=1' >> config.sh && \
              echo 'CONFIG_ENABLE_HEXDUMP=1' >> config.sh && \
              echo 'CONFIG_ENABLE_ICAM=1' >> config.sh && \
              make -j2"

      - name: 📦 Binary bereitstellen (oscam)
        uses: actions/upload-artifact@v3
        with:
          name: oscam-dm920
          path: oscam/oscam
